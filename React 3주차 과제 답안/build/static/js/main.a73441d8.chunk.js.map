{"version":3,"sources":["Main.js","Review.js","App.js","reportWebVitals.js","index.js"],"names":["Main","props","history","useHistory","day_text_arr","0","1","2","3","4","5","6","week_rates","Object","keys","map","_d","idx","today","Date","getDay","d","parseInt","w","day","rate","Math","floor","random","ceil","style","maxWidth","width","height","margin","padding","border","boxSizing","borderRadius","textAlign","display","justifyContent","alignItems","fontWeight","Array","from","length","item","backgroundColor","appearance","borderColor","borderTop","borderBottom","borderLeft","color","cursor","onClick","push","Review","params","useParams","React","useState","setRate","useEffect","press","e","indexOf","key","window","addEventListener","removeEventListener","background","week_day","goBack","App","className","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a73441d8.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst Main = (props) => {\n  const history = useHistory();\n  const day_text_arr = {\n    0: \"일\",\n    1: \"월\",\n    2: \"화\",\n    3: \"수\",\n    4: \"목\",\n    5: \"금\",\n    6: \"토\",\n  };\n  const week_days = Object.keys(day_text_arr).map((_d, idx) => {\n    let today = new Date().getDay();\n    let d =\n      today + parseInt(_d) > 6\n        ? today + parseInt(_d) - 7\n        : today + parseInt(_d);\n\n    return day_text_arr[d];\n  });\n  // 평점을 랜덤으로 생성해보자! 참고: https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n  const week_rates = week_days.map((w, idx) => {\n    return {\n      day: w,\n      rate:\n        Math.floor(Math.random() * (Math.floor(5) - Math.ceil(1) + 1)) +\n        Math.ceil(1),\n    };\n  });\n\n  return (\n    <>\n      {/* Quiz : style을 styled-components를 사용하도록 변경해주세요! :) (스타일을 그대로 옮겨도 좋고, 좀 더 예쁘게 바꿔도 좋아요!) */}\n      <div\n        style={{\n          maxWidth: \"350px\",\n          width: \"80vw\",\n          height: \"90vh\",\n          margin: \"5vh auto\",\n          padding: \"5vh 0\",\n          border: \"1px solid #ddd\",\n          boxSizing: \"border-box\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <h3 style={{ textAlign: \"center\" }}>내 일주일은?</h3>\n\n        {week_rates.map((w, idx) => {\n          return (\n            <div\n              key={`week_day_${idx}`}\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                margin: \"1rem 0\",\n                width: \"100%\",\n              }}\n            >\n              <p style={{ margin: \"0 0.5rem 0 0\", fontWeight: \"bold\" }}>\n                {w.day}\n              </p>\n              {Array.from({ length: 5 }, (item, idx) => {\n                return (\n                  <div\n                    key={idx}\n                    style={{\n                      width: \"30px\",\n                      height: \"30px\",\n                      borderRadius: \"30px\",\n                      margin: \"5px\",\n                      backgroundColor: w.rate < idx ? \"#ddd\" : \"#ffeb3b\",\n                    }}\n                  ></div>\n                );\n              })}\n              <div\n                style={{\n                  appearance: \"none\",\n                  backgroundColor: \"transparent\",\n                  borderColor: \"purple\",\n                  width: \"0\",\n                  height: \"0\",\n                  borderTop: \"1rem solid transparent\",\n                  borderBottom: \"1rem solid transparent\",\n                  borderLeft: \"1.6rem solid purple\",\n                  color: \"#fff\",\n                  cursor: \"pointer\",\n                }}\n                onClick={() => {\n                  history.push(`/review/${w.day}`);\n                }}\n              ></div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst Review = (props) => {\n  const history = useHistory();\n  const params = useParams();\n  const [rate, setRate] = React.useState(0);\n\n  React.useEffect(() => {\n    const press = (e) => {\n      if ([1, 2, 3, 4, 5].indexOf(parseInt(e.key)) !== -1) {\n        setRate(parseInt(e.key));\n      }\n    };\n    window.addEventListener(\"keydown\", press);\n\n    return () => window.removeEventListener(\"keydown\", press);\n  }, []);\n\n  return (\n    <>\n      {/* Quiz 2 : style을 styled-components를 사용하도록 변경해주세요! :) (스타일을 그대로 옮겨도 좋고, 좀 더 예쁘게 바꿔도 좋아요!) */}\n      <div\n        style={{\n          maxWidth: \"350px\",\n          width: \"80vw\",\n          height: \"90vh\",\n          margin: \"5vh auto\",\n          padding: \"5vh 5vw\",\n          border: \"1px solid #ddd\",\n          boxSizing: \"border-box\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <h3 style={{ textAlign: \"center\" }}>\n          <span\n            style={{\n              color: \"#fff\",\n              fontWeight: \"900\",\n              background: \"orange\",\n              padding: \"0.2rem\",\n              borderRadius: \"5px\",\n            }}\n          >\n            {params.week_day}요일\n          </span>{\" \"}\n          평점 남기기\n        </h3>\n\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            margin: \"1rem 0\",\n            width: \"100%\",\n          }}\n        >\n          {Array.from({ length: 5 }, (item, idx) => {\n            return (\n              <div\n                key={idx}\n                onClick={() => {\n                  setRate(idx + 1);\n                }}\n                style={{\n                  width: \"30px\",\n                  height: \"30px\",\n                  borderRadius: \"30px\",\n                  margin: \"5px\",\n                  backgroundColor: rate < idx + 1 ? \"#ddd\" : \"#ffeb3b\",\n                }}\n              ></div>\n            );\n          })}\n        </div>\n\n        <button\n          style={{\n            width: \"100%\",\n            backgroundColor: \"purple\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            padding: \"1rem\",\n            color: \"#fff\",\n          }}\n          onClick={() => {\n            history.goBack();\n          }}\n        >\n          평점 남기기\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Review;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport Main from \"./Main\";\nimport Review from \"./Review\";\n\n// quiz 1: \"/\"\" 경로에서는 Main 컴포넌트를, \"/review\"에서는 Review 컴포넌트를 볼 수 있도록 라우팅 시켜주세요.\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Route path=\"/\" exact>\n        <Main />\n      </Route>\n      <Route path=\"/review/:week_day\" exact>\n        <Review />\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}